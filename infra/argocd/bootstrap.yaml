apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: bootstrap-apps
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/SPRIME01/HomeStation-Core.git
    targetRevision: HEAD
    path: infra/argocd/apps
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: "25.0.0"
    helm:
      values: |
        ingressRoute:
          dashboard:
            enabled: true
        ports:
          web:
            redirectTo:
              port: websecure
          websecure:
            tls:
              enabled: true
        additionalArguments:
          - "--certificatesresolvers.letsencrypt.acme.email=admin@homestation.local"
          - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
          - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: "0.25.0"
    helm:
      values: |
        server:
          dev:
            enabled: true
          standalone:
            enabled: false
          ha:
            enabled: false
        ui:
          enabled: true
          serviceType: "ClusterIP"
        injector:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: vault
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: supabase
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/SPRIME01/HomeStation-Core.git
    targetRevision: HEAD
    path: supabase-kubernetes/charts/supabase
    helm:
      values: |
        # Secret Configuration - Using Kubernetes secrets
        secret:
          db:
            secretRef: supabase-db
          jwt:
            secretRef: supabase-jwt
          analytics:
            secretRef: supabase-analytics
          s3:
            secretRef: supabase-s3
          smtp:
            secretRef: supabase-smtp
          dashboard:
            secretRef: supabase-dashboard

        # Database Configuration - Using standard PostgreSQL
        db:
          enabled: true
          image:
            repository: postgres
            tag: "15-alpine"
            pullPolicy: IfNotPresent
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          persistence:
            enabled: true
            size: 5Gi
          environment:
            POSTGRES_HOST: "/var/run/postgresql"
            POSTGRES_PORT: "5432"

        # Studio Configuration
        studio:
          enabled: true
          image:
            repository: supabase/studio
            tag: "latest"
            pullPolicy: IfNotPresent

        # Auth Service (GoTrue)
        auth:
          enabled: true
          image:
            repository: supabase/gotrue
            tag: "latest"
            pullPolicy: IfNotPresent
          initContainers:
            - name: wait-for-db
              image: postgres:15-alpine
              command: ['sh', '-c', 'until pg_isready -h supabase-supabase-db -p 5432 -U postgres; do echo "Waiting for database..."; sleep 2; done;']

        # REST API (PostgREST)
        rest:
          enabled: true
          image:
            repository: postgrest/postgrest
            tag: "latest"
            pullPolicy: IfNotPresent

        # Realtime Service
        realtime:
          enabled: true
          image:
            repository: supabase/realtime
            tag: "latest"
            pullPolicy: IfNotPresent

        # Storage Service
        storage:
          enabled: true
          image:
            repository: supabase/storage-api
            tag: "latest"
            pullPolicy: IfNotPresent

        # Image Proxy
        imgproxy:
          enabled: true
          image:
            repository: darthsim/imgproxy
            tag: "latest"
            pullPolicy: IfNotPresent

        # Meta API
        meta:
          enabled: true
          image:
            repository: supabase/postgres-meta
            tag: "latest"
            pullPolicy: IfNotPresent

        # Kong Gateway - DISABLED (using Traefik instead)
        kong:
          enabled: false

        # Optional services - DISABLED for simplicity
        analytics:
          enabled: false
        vector:
          enabled: false
        functions:
          enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: supabase
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
